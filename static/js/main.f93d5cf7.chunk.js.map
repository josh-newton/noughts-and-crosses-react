{"version":3,"sources":["Square/index.js","Board/index.js","lib/AI.js","lib/Logic.js","Game/index.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","Component","AI","board","counter","opponentCounter","winningLines","move","isMoveTaken","window","DEBUG","console","log","String","corner","lines","length","a","b","c","aTaken","isMoveTakenByAI","bTaken","cTaken","isMoveTakenByOpponent","outer","centreTaken","rand","possMoves","push","Math","floor","random","parseInt","takeWin","blockOpponent","takeCentre","blockTakingOuterMiddle","blockByTakingOppositeCorner","takeCorner","randomMove","Logic","Game","state","history","Array","fill","stepNumber","xIsNext","logic","ai","playAINextMove","bind","prevProps","prevState","slice","isAITurn","isANewMove","isGameOver","calculateWinner","calculateDraw","getNextMove","handleMove","setState","concat","updateBoard","step","status","current","winner","draw","moves","map","desc","key","jumpTo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f93d5cf7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './index.scss';\n\nfunction Square(props) {\n\n    return (\n      <button\n        className=\"square\"\n        onClick={props.onClick}>\n        { props.value }\n      </button>\n    );\n\n}\n\nexport default Square;\n","import React, { Component } from 'react';\nimport './index.scss';\n\n// Components\nimport Square from '../Square'\n\nclass Board extends Component {\n\n  renderSquare(i) {\n      return <Square value={this.props.squares[i]}\n      onClick={() => this.props.onClick(i)} />;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          { this.renderSquare(0) }\n          { this.renderSquare(1) }\n          { this.renderSquare(2) }\n        </div>\n        <div className=\"board-row\">\n          { this.renderSquare(3) }\n          { this.renderSquare(4) }\n          { this.renderSquare(5) }\n        </div>\n        <div className=\"board-row\">\n          { this.renderSquare(6) }\n          { this.renderSquare(7) }\n          { this.renderSquare(8) }\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Board;\n","class AI {\n  constructor(board, counter) {\n    this.board = board;\n    this.counter = counter;\n    this.opponentCounter = counter === '0' ? 'X' : '0';\n    this.winningLines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n  }\n\n  updateBoard(board) {\n    this.board = board;\n  }\n\n  isMoveTaken(move) {\n    let board = this.board;\n    return board[move] !== null;\n  }\n\n  isMoveTakenByAI(move) {\n    let board = this.board, counter = this.counter;\n    return board[move] === counter;\n  }\n\n  isMoveTakenByOpponent(move) {\n    let board = this.board, counter = this.opponentCounter;\n    return board[move] === counter;\n  }\n\n  takeCentre() {\n    let centre = 4;\n    !this.isMoveTaken(centre) && window.DEBUG && console.log('TAKE CENTRE');\n    return !this.isMoveTaken(centre) ? String(centre) : false;\n  }\n\n  takeCorner() {\n    let corners = [0,2,6,8];\n    for (let corner of corners) {\n      if (!this.isMoveTaken(corner)) {\n        window.DEBUG && console.log('TAKE CORNER: take ', corner);\n        return String(corner);\n      }\n    }\n    return false;\n  }\n\n  takeWin() {\n    const lines = this.winningLines;\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      let aTaken = this.isMoveTakenByAI(a);\n      let bTaken = this.isMoveTakenByAI(b);\n      let cTaken = this.isMoveTakenByAI(c);\n\n      if (aTaken && bTaken && !this.isMoveTaken(c)) {\n        window.DEBUG && console.log('TAKE WIN: take ', c);\n        return String(c);\n      } else if(aTaken && cTaken && !this.isMoveTaken(b)) {\n        window.DEBUG && console.log('TAKE WIN: take ', b);\n        return String(b);\n      } else if (bTaken && cTaken && !this.isMoveTaken(a)) {\n        window.DEBUG && console.log('TAKE WIN: take ', a);\n        return String(a);\n      }\n    }\n    return false;\n  }\n\n  blockOpponent() {\n    const lines = this.winningLines;\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      let aTaken = this.isMoveTakenByOpponent(a);\n      let bTaken = this.isMoveTakenByOpponent(b);\n      let cTaken = this.isMoveTakenByOpponent(c);\n\n      if (aTaken && bTaken && !this.isMoveTaken(c)) {\n        window.DEBUG && console.log('BLOCK: take ', c);\n        return String(c);\n      } else if(aTaken && cTaken && !this.isMoveTaken(b)) {\n        window.DEBUG && console.log('BLOCK: take ', b);\n        return String(b);\n      } else if (bTaken && cTaken && !this.isMoveTaken(a)) {\n        window.DEBUG && console.log('BLOCK: take ', a);\n        return String(a);\n      }\n    }\n    return false;\n  }\n\n  blockTakingOuterMiddle() {\n    // This is an offensive move forcing the opponent to block the AIs three in\n    // a row, instead of allowing opponent to take a third corner and set up a\n    // definite win\n    if(this.isMoveTakenByAI(4)) {\n      let outers = [1,3,5,7];\n      for (let outer of outers) {\n        if (!this.isMoveTaken(outer)) {\n          window.DEBUG && console.log('BLOCK TAKING OUTER MIDDLE: take ', outer);\n          return String(outer);\n        }\n      }\n    }\n\n    return false;\n  }\n\n  blockByTakingOppositeCorner() {\n    const lines = [\n      [0, 8],\n      [2, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b] = lines[i];\n\n      let aTaken = this.isMoveTakenByOpponent(a);\n      let bTaken = this.isMoveTakenByOpponent(b);\n      let centreTaken = this.isMoveTakenByOpponent(4);\n\n      if (aTaken && !this.isMoveTaken(b) && centreTaken === false) {\n        window.DEBUG && console.log('BLOCK TAKING CORNER: take ', b);\n        return String(b);\n      } else if(bTaken && !this.isMoveTaken(a) && centreTaken === false) {\n        window.DEBUG && console.log('BLOCK TAKING CORNER: take ', a);\n        return String(a);\n      }\n    }\n    return false;\n  }\n\n  randomMove() {\n    let move, rand, possMoves = [], board = this.board;\n\n    for(let i = 0; i < board.length; i++){\n      if (!this.isMoveTaken(i)) {\n        possMoves.push(i);\n      }\n    }\n    rand = Math.floor(Math.random() * possMoves.length);\n    window.DEBUG && console.log('RANDOM MOVE: take ', possMoves[rand]);\n    return possMoves[rand];\n  }\n\n  getNextMove() {\n    // Heirarchy of AI moves\n    // The functions return a string instead of an int so if they return 0, as\n    // in the first square, they are not skipped. I use parseInt to cast them back.\n    return parseInt(\n      this.takeWin() ||\n      this.blockOpponent() ||\n      this.takeCentre() ||\n      this.blockTakingOuterMiddle() ||\n      this.blockByTakingOppositeCorner() ||\n      this.takeCorner() ||\n      this.randomMove()\n    );\n  }\n\n}\n\nexport default AI;\n","class Logic {\n\n  calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n\n  calculateDraw(squares) {\n    for (let square of squares) {\n      if (square === null) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n}\n\nexport default Logic;\n","import React, { Component } from 'react';\nimport './index.scss';\n\n// Components\nimport Board from '../Board'\nimport AI from '../lib/AI.js'\nimport Logic from '../lib/Logic.js'\n\nwindow.DEBUG = true;\n\nclass Game extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n\n    this.logic = new Logic();\n    this.ai = new AI(this.state.history[0].squares, '0');\n\n    this.playAINextMove = this.playAINextMove.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares =  current.squares.slice();\n    const xIsNext = this.state.xIsNext;\n    const isAITurn = xIsNext !== prevState.xIsNext && !xIsNext;\n    const stepNumber = this.state.stepNumber;\n    const isANewMove = (stepNumber > prevState.stepNumber) && (stepNumber === (history.length - 1)); // i.e. user is not reviewing previous moves from history\n    const isGameOver = this.logic.calculateWinner(squares) || this.logic.calculateDraw(squares);\n\n    if (isAITurn && isANewMove && !isGameOver) {\n      this.playAINextMove();\n    }\n  }\n\n  playAINextMove() {\n    let move = this.ai.getNextMove();\n    this.handleMove(move);\n  }\n\n  handleMove(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares =  current.squares.slice();\n    if (this.logic.calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : '0';\n\n    this.setState({\n      history: history.concat([{\n        squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n\n    this.ai.updateBoard(squares);\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = this.logic.calculateWinner(current.squares);\n    const draw = !winner && this.logic.calculateDraw(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>\n            {desc}\n          </button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else if (draw) {\n      status = 'Draw!'\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-info\">\n          <p>{status}</p>\n        </div>\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleMove(i)}/>\n        </div>\n        <div className=\"game-history\">\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Game from './Game/';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept();\n}\n"],"sourceRoot":""}